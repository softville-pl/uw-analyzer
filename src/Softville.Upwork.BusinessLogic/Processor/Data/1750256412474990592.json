{
  "job": {
    "ciphertext": "~0176d788be492f9f59",
    "rid": 1010891106,
    "uid": "1750256412474990592",
    "type": 2,
    "access": 4,
    "title": "C# Backend Dev for Connecting Wallet Address ",
    "status": 1,
    "category": {
      "name": "Web Development",
      "urlSlug": "web-development"
    },
    "categoryGroup": {
      "name": "Web, Mobile \u0026 Software Dev",
      "urlSlug": "web-mobile-software-dev"
    },
    "hideBudget": false,
    "budget": {
      "currencyCode": "USD",
      "amount": 0
    },
    "createdOn": "2024-01-24T20:37:01.918Z",
    "postedOn": "2024-01-24T20:37:02.301Z",
    "publishTime": "2024-01-24T20:37:02.301Z",
    "wasRenewed": false,
    "startDate": null,
    "deliveryDate": null,
    "workload": "Less than 30 hrs/week",
    "companyRecno": 4576230,
    "durationIdV3": 2,
    "durationLabel": "1 to 3 months",
    "notSureProjectDuration": false,
    "notSureFreelancersToHire": false,
    "notSureExperienceLevel": false,
    "numberOfPositionsToHire": 1,
    "extendedBudgetInfo": {
      "hourlyBudgetType": 0,
      "hourlyBudgetMin": 30,
      "hourlyBudgetMax": 50
    },
    "contractorTier": 3,
    "description": "This project is an initial task for a much larger project/other projects. Our hope \u0026 plan is this will lead to more work together. \n\nTASK:\nWe need a backend developer that has experience connecting wallet addresses and retrieving holding information. This work may also involve some billable consultation, so we may request that as well. \n\nWe are going for a very simple initial goal\n-We will provide a public wallet address \n-Then we need you to build the backend to retrieve the symbols of the current holdings. Once we have that, we would like to retrieve the amount of each of holding. \n\nThis would be like what Debank .com has on their site, where a wallet address is provide and the holdings are displayed. We have a UI developed we will tie this into, but we can discuss this later. \n\nWe need someone to help us get started on the backend. Likely we will just need you to start with generating API keys for etherscan and getting details for the address provided. Our application is built in C#, so that will be necessary.  \n\nWe can provide further details as requested.",
    "attachments": null,
    "questions": [
      {
        "position": 0,
        "question": "Please provide a link to a website where you previously built the backend for a similar crypto wallet connection/wallet holding display from a wallet address."
      }
    ],
    "qualifications": {
      "type": 0,
      "location": null,
      "minOdeskHours": 0,
      "groupRecno": null,
      "shouldHavePortfolio": false,
      "tests": null,
      "minHoursWeek": 30,
      "group": null,
      "prefEnglishSkill": 0,
      "minJobSuccessScore": 0,
      "risingTalent": false,
      "locationCheckRequired": false,
      "countries": null,
      "regions": null,
      "states": null,
      "timezones": null,
      "localMarket": true,
      "onSiteType": null,
      "locations": null,
      "localDescription": null,
      "localFlexibilityDescription": null,
      "earnings": null,
      "languages": null
    },
    "isPremium": false,
    "segmentationData": [
      {
        "name": "Employment",
        "value": "EMPLOYMENT_POSITION",
        "label": "Ongoing project",
        "type": "EMPLOYMENT",
        "sortOrder": 1,
        "typeUid": "535792587707281410",
        "customValue": null,
        "skill": null
      }
    ],
    "clientActivity": {
      "lastBuyerActivity": "2024-02-08T20:35:40.093Z",
      "totalApplicants": 28,
      "totalHired": 1,
      "totalInvitedToInterview": 1,
      "unansweredInvites": 0,
      "invitationsSent": 1
    },
    "weeklyRetainerBudget": null,
    "annotations": {
      "tags": [
        "jsi_contractToHire",
        "contractToHireSet",
        "searchable",
        "C2HJobsOptInEducation"
      ],
      "customFields": {
        "totalTimeSpentOnDescriptionPageAI": "638",
        "sourcingUpdateForbidden": "false",
        "type": "RJP",
        "browser": "Chrome",
        "generatedDescriptionAI": "We are looking for a skilled C# Backend Developer to assist us in connecting wallet addresses for a project that will last between 1 to 3 months. The ideal candidate should have experience in API integration, Back-End Development, and the .NET Framework.\n\nThe main responsibility of the successful candidate will be to develop and integrate APIs for connecting wallet addresses with our crypto exchange platform. Knowledge of DeFi, crypto wallets, and crypto wallet development will be highly advantageous.\n\nTo apply for this position, please submit a proposal detailing your relevant experience and how you can contribute to the project. Additionally, we would appreciate it if you could include links to any past completed projects that showcase your skills in API integration and C# development.\n\nWe look forward to reviewing your proposals and finding the right candidate for this exciting project.",
        "timeSpentToGetAPIDescriptionAI": "4",
        "siteSource": "desktop_rjp",
        "publishTime": "2024-01-24T20:37:02.301Z",
        "totalTimeJobPostFlowAIv2": "",
        "inputsSkillsAI": "[{\u0022skillUid\u0022:\u00221110580482566246400\u0022,\u0022parentSkillUid\u0022:\u00221110580497267281920\u0022},{\u0022skillUid\u0022:\u00221484275089232547840\u0022,\u0022parentSkillUid\u0022:\u00221110580497267281920\u0022},{\u0022skillUid\u0022:\u0022996364628025274380\u0022},{\u0022skillUid\u0022:\u00221110580482322976768\u0022},{\u0022skillUid\u0022:\u00221031626732825198592\u0022},{\u0022skillUid\u0022:\u00221504884911984607233\u0022},{\u0022skillUid\u0022:\u00221504884906485874688\u0022},{\u0022skillUid\u0022:\u00221549040408458039296\u0022},{\u0022skillUid\u0022:\u00221504884906460708864\u0022}]",
        "sourcingUpdateCount": "0",
        "totalDescriptionEditingTimeAI": "615",
        "totalTimeSpentOnReviewPageAIv2": "99",
        "device": "Windows",
        "startTimeJobPostFlowAIv2": "1706127611482",
        "finalDescriptionAI": "This project is an initial task for a much larger project/other projects. Our hope \u0026 plan is this will lead to more work together. \n\nTASK:\nWe need a backend developer that has experience connecting wallet addresses and retrieving holding information. This work may also involve some billable consultation, so we may request that as well. \n\nWe are going for a very simple initial goal\n-We will provide a public wallet address \n-Then we need you to build the backend to retrieve the symbols of the current holdings. Once we have that, we would like to retrieve the amount of each of holding. \n\nThis would be like what Debank .com has on their site, where a wallet address is provide and the holdings are displayed. We have a UI developed we will tie this into, but we can discuss this later. \n\nWe need someone to help us get started on the backend. Likely we will just need you to start with generating API keys for etherscan and getting details for the address provided. Our application is built in C#, so that will be necessary.  \n\nWe can provide further details as requested.",
        "inputsTitleAI": "C# Backend Dev for Connecting Wallet Address ",
        "inputsDurationAI": "474250516458926082"
      }
    },
    "isContractToHire": true,
    "recruitingServices": null
  },
  "buyer": {
    "isPaymentMethodVerified": true,
    "location": {
      "offsetFromUtcMillis": -21600000,
      "countryTimezone": "United States (UTC-06:00)",
      "city": "Austin",
      "country": "United States"
    },
    "stats": {
      "totalAssignments": 32,
      "activeAssignmentsCount": 5,
      "feedbackCount": 18,
      "score": 5,
      "totalJobsWithHires": 28,
      "hoursCount": 716.16667,
      "totalCharges": {
        "currencyCode": "USD",
        "amount": 26969.67
      }
    },
    "isEnterprise": false,
    "company": {
      "isEDCReplicated": false,
      "contractDate": "2017-11-10T00:00:00.000Z",
      "profile": {
        "size": "10",
        "industry": null,
        "visible": true,
        "l3Occupations": []
      }
    },
    "jobs": {
      "postedCount": 44,
      "openCount": 1
    },
    "avgHourlyJobsRate": {
      "amount": 36.79593187434987
    }
  },
  "currentUserInfo": {
    "owner": false,
    "freelancerInfo": {
      "qualificationsMatches": {
        "totalQualifications": 4,
        "totalMatches": 4,
        "matches": [
          {
            "qualification": 0,
            "qualified": true,
            "clientPreferred": "all",
            "freelancerValue": "IC",
            "freelancerValueLabel": "Not Specified",
            "clientPreferredLabel": "Any"
          },
          {
            "qualification": 4,
            "qualified": true,
            "clientPreferred": "0",
            "freelancerValue": "3",
            "freelancerValueLabel": "Fluent",
            "clientPreferredLabel": "Any"
          },
          {
            "qualification": 8,
            "qualified": true,
            "clientPreferred": "ANY",
            "freelancerValue": "0.00",
            "freelancerValueLabel": "0.00",
            "clientPreferredLabel": "Any"
          },
          {
            "qualification": 10,
            "qualified": true,
            "clientPreferred": "Any",
            "freelancerValue": "en",
            "freelancerValueLabel": "English",
            "clientPreferredLabel": null
          }
        ]
      },
      "applied": null,
      "hired": null,
      "contract": null,
      "profileState": 10,
      "hourlyRate": {
        "currencyCode": "USD",
        "amount": 56
      },
      "devProfileCiphertext": "~01256f0be21d7e2c1e",
      "application": null,
      "pendingInvite": null
    }
  },
  "paths": {
    "js": "/nx/jobs/search"
  },
  "ff": {
    "isRemoveClientTotalSpentCap": true,
    "isJobDetailsQuickJobPost": true,
    "CFE6770ImprovedQualificationsSection": true,
    "jdShowInvitesCount": true,
    "enforceMinimumRateInProfile": true,
    "TSV1877IDVatSubmitProposal": true,
    "AG2156TeamsAddRoleFlow": true,
    "CLOB6375ExpandedCompanyProfile": true
  },
  "qt": [],
  "experiments": {
    "idvOnSubmitProposals": {
      "soft": false,
      "hard": false,
      "idv_required": false,
      "idv_complete": false
    }
  },
  "isVisitor": false
}